/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil/router";
export namespace Components {
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface ClientDeserts {
    }
    interface ClientPanel {
    }
    interface MyBody {
    }
    interface MyFooter {
    }
    interface MyHeader {
    }
    interface RigthPanel {
    }
    interface UserLogin {
        "hidden": boolean;
        "id": string;
    }
    interface UserRegister {
        "hidden": boolean;
        "id": string;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLClientDesertsElement extends Components.ClientDeserts, HTMLStencilElement {
    }
    var HTMLClientDesertsElement: {
        prototype: HTMLClientDesertsElement;
        new (): HTMLClientDesertsElement;
    };
    interface HTMLClientPanelElement extends Components.ClientPanel, HTMLStencilElement {
    }
    var HTMLClientPanelElement: {
        prototype: HTMLClientPanelElement;
        new (): HTMLClientPanelElement;
    };
    interface HTMLMyBodyElement extends Components.MyBody, HTMLStencilElement {
    }
    var HTMLMyBodyElement: {
        prototype: HTMLMyBodyElement;
        new (): HTMLMyBodyElement;
    };
    interface HTMLMyFooterElement extends Components.MyFooter, HTMLStencilElement {
    }
    var HTMLMyFooterElement: {
        prototype: HTMLMyFooterElement;
        new (): HTMLMyFooterElement;
    };
    interface HTMLMyHeaderElement extends Components.MyHeader, HTMLStencilElement {
    }
    var HTMLMyHeaderElement: {
        prototype: HTMLMyHeaderElement;
        new (): HTMLMyHeaderElement;
    };
    interface HTMLRigthPanelElement extends Components.RigthPanel, HTMLStencilElement {
    }
    var HTMLRigthPanelElement: {
        prototype: HTMLRigthPanelElement;
        new (): HTMLRigthPanelElement;
    };
    interface HTMLUserLoginElement extends Components.UserLogin, HTMLStencilElement {
    }
    var HTMLUserLoginElement: {
        prototype: HTMLUserLoginElement;
        new (): HTMLUserLoginElement;
    };
    interface HTMLUserRegisterElement extends Components.UserRegister, HTMLStencilElement {
    }
    var HTMLUserRegisterElement: {
        prototype: HTMLUserRegisterElement;
        new (): HTMLUserRegisterElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "client-deserts": HTMLClientDesertsElement;
        "client-panel": HTMLClientPanelElement;
        "my-body": HTMLMyBodyElement;
        "my-footer": HTMLMyFooterElement;
        "my-header": HTMLMyHeaderElement;
        "rigth-panel": HTMLRigthPanelElement;
        "user-login": HTMLUserLoginElement;
        "user-register": HTMLUserRegisterElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface ClientDeserts {
    }
    interface ClientPanel {
    }
    interface MyBody {
    }
    interface MyFooter {
    }
    interface MyHeader {
    }
    interface RigthPanel {
    }
    interface UserLogin {
        "hidden"?: boolean;
        "id"?: string;
    }
    interface UserRegister {
        "hidden"?: boolean;
        "id"?: string;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "client-deserts": ClientDeserts;
        "client-panel": ClientPanel;
        "my-body": MyBody;
        "my-footer": MyFooter;
        "my-header": MyHeader;
        "rigth-panel": RigthPanel;
        "user-login": UserLogin;
        "user-register": UserRegister;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "client-deserts": LocalJSX.ClientDeserts & JSXBase.HTMLAttributes<HTMLClientDesertsElement>;
            "client-panel": LocalJSX.ClientPanel & JSXBase.HTMLAttributes<HTMLClientPanelElement>;
            "my-body": LocalJSX.MyBody & JSXBase.HTMLAttributes<HTMLMyBodyElement>;
            "my-footer": LocalJSX.MyFooter & JSXBase.HTMLAttributes<HTMLMyFooterElement>;
            "my-header": LocalJSX.MyHeader & JSXBase.HTMLAttributes<HTMLMyHeaderElement>;
            "rigth-panel": LocalJSX.RigthPanel & JSXBase.HTMLAttributes<HTMLRigthPanelElement>;
            "user-login": LocalJSX.UserLogin & JSXBase.HTMLAttributes<HTMLUserLoginElement>;
            "user-register": LocalJSX.UserRegister & JSXBase.HTMLAttributes<HTMLUserRegisterElement>;
        }
    }
}
